public final class Demo
{
    
    
    /*
     *  
	 * 输入：i 一个小于10的正整数，无需做任何校验。
     * 输出：二维数组。类似如下, 例如i=7时，一圈一圈绕行的二维数组，一共7行7列
     *   1   2   3   4   5   6   7
     *  24  25  26  27  28  29   8
     *  23  40  41  42  43  30   9
     *  22  39  48  49  44  31  10
     *  21  38  47  46  45  32  11
     *  20  37  36  35  34  33  12
     *  19  18  17  16  15  14  13
     */

    // 存储结果的二维数组
    public int[][] data;
    
    // 存储已经走过的位置
    private int[][] passed;
    
    /**
     * 表示四个方向，向右，向下，向左，向上
     */
    private Direction[] option = new Direction[4];
    
    public Demo(int i)
    {
        //在这里实现业务
        int x = 0;
        int y = 0;
        int max = i * i;
        int index = 1;
        int dir = 0;
        
        data = new int[i][i];
        passed = new int[i][i];
        
        initDirection();
        data[0][0] = index;
        passed[0][0] = 1;
        index++;
        
        while (max > index - 1)
        {         	
        	x = x + option[dir].getX();
        	y = y + option[dir].getY();        	
        	if (changeDirection(x, y, i)) 
        	{
        		x = x - option[dir].getX();
        		y = y - option[dir].getY();
        		dir++;
        		if (4 == dir) 
        		{
        			dir = 0;
        		}
        		continue;
        	}        	       	        	
        	
        	data[x][y] = index;
        	passed[x][y] = 1;
            index++;        	            
        }
    }
    
    
    private boolean changeDirection(int x, int y, int i) 
    {
    	// 到达边界
    	if (x < 0 || y < 0 || x >= i || y >= i)
    	{
    		return true;
    	}
    	
    	// 已经走过了
    	if (1 == passed[x][y]) 
    	{
    		return true;
    	}
    	
    	return false;
    }
    
    private void initDirection() 
    {
    	for (int i = 0; i < 4; i++) 
    	{
    		option[i] = new Direction();    		
    	}   	
    	option[0].setX(0);
    	option[0].setY(1);
    	
    	option[1].setX(1);
    	option[1].setY(0);
    	
    	option[2].setX(0);
    	option[2].setY(-1);
    	
    	option[3].setX(-1);
    	option[3].setY(0);
    }
    
}
